## @section Common parameters

## @param {bool} external - Enable external access from outside the cluster
## @param {string} size - Persistent Volume size
## @param {int} replicas - Number of Postgres replicas
## @param {string} storageClass - StorageClass used to store the data
external: false
size: 10Gi
replicas: 2
storageClass: ""

## @typedef {struct} PostgresqlParameters - PostgreSQL server parameters
## @field {int} max_connections - Determines the maximum number of concurrent connections to the database server. The default is typically 100 connections

## @typedef {struct} Postgresql - PostgreSQL server configuration
## @field {PostgresqlParameters} parameters - PostgreSQL server parameters

## @param {Postgresql} postgresql - PostgreSQL server configuration
postgresql:
  parameters:
    max_connections: 100

## @typedef {struct} Quorum - Quorum configuration for synchronous replication
## @field {int} minSyncReplicas - Minimum number of synchronous replicas that must acknowledge a transaction before it is considered committed.
## @field {int} maxSyncReplicas - Maximum number of synchronous replicas that can acknowledge a transaction (must be lower than the number of instances).

## @param {Quorum} quorum - Quorum configuration for synchronous replication
quorum:
  minSyncReplicas: 0
  maxSyncReplicas: 0

## @section Configuration parameters

## @typedef {struct} User - User configuration
## @field {*string} password - Password for the user
## @field {*bool} replication - Whether the user has replication privileges

## @param {map[string]User} users - Users configuration
##
## Example:
## users:
##   user1:
##     password: strongpassword
##   user2:
##     password: hackme
##   airflow:
##     password: qwerty123
##   debezium:
##     replication: true
users: {}

## @typedef {struct} DatabaseRoles - Database roles configuration
## @field {[]string} admin - List of users with admin privileges
## @field {[]string} readonly - List of users with read-only privileges

## @typedef {struct} Database - Database configuration
## @field {*DatabaseRoles} roles - Roles for the database
## @field {[]string} extensions - Extensions enabled for the database

## @param {map[string]Database} databases - Databases configuration
##
## Example:
## databases:
##   myapp:
##     roles:
##       admin:
##       - user1
##       - debezium
##       readonly:
##       - user2
##   airflow:
##     roles:
##       admin:
##       - airflow
##     extensions:
##     - hstore
databases: {}

## @section Backup parameters

## @typedef {struct} Backup - Backup configuration
## @field {bool} enabled - Enable regular backups
## @field {string} schedule - Cron schedule for automated backups
## @field {string} retentionPolicy - Retention policy
## @field {string} destinationPath - Path to store the backup (i.e. s3://bucket/path/to/folder)
## @field {string} endpointURL - S3 Endpoint used to upload data to the cloud
## @field {string} s3AccessKey - Access key for S3, used for authentication
## @field {string} s3SecretKey - Secret key for S3, used for authentication

## @param {Backup} backup - Backup configuration
backup:
  enabled: false
  retentionPolicy: 30d
  destinationPath: s3://bucket/path/to/folder/
  endpointURL: http://minio-gateway-service:9000
  schedule: "0 2 * * * *"
  s3AccessKey: oobaiRus9pah8PhohL1ThaeTa4UVa7gu
  s3SecretKey: ju3eum4dekeich9ahM1te8waeGai0oog

## @section Bootstrap parameters

## @typedef {struct} Bootstrap - Bootstrap configuration
## @field {bool} enabled - Restore database cluster from a backup
## @field {string} recoveryTime - Timestamp (PITR) up to which recovery will proceed, expressed in RFC 3339 format. If left empty, will restore latest
## @field {string} oldName - Name of database cluster before deleting

## @param {Bootstrap} bootstrap - Bootstrap configuration
bootstrap:
  enabled: false
  # example: 2020-11-26 15:22:00.00000+00
  recoveryTime: ""
  oldName: ""

## @typedef {struct} Resources - Resource configuration
## @field {*quantity} cpu - CPU
## @field {*quantity} memory - Memory

## @param {Resources} resources - Resources
resources: {}
 # resources:
 #   cpu: 4000m
 #   memory: 4Gi

## @enum {string} ResourcesPreset - Default sizing preset
## @value nano
## @value micro
## @value small
## @value medium
## @value large
## @value xlarge
## @value 2xlarge

## @param {ResourcesPreset} resourcesPreset="micro" - Default sizing preset used when `resources` is omitted.
resourcesPreset: "micro"
