## @section Common parameters

## @param {string} host - The hostname used to access the grafana externally (defaults to 'grafana' subdomain for the tenant host).
host: ""

## @typedef {struct} Resources - Resource configuration
## @field {*quantity} cpu - CPU resources
## @field {*quantity} memory - Memory resources

## @typedef {struct} Vminsert - VMInsert configuration
## @field {*Resources} minAllowed - Minimum allowed resources for vminsert component
## @field {*Resources} maxAllowed - Maximum allowed resources for vminsert component

## @typedef {struct} Vmselect - VMSelect configuration
## @field {*Resources} minAllowed - Minimum allowed resources for vmselect component
## @field {*Resources} maxAllowed - Maximum allowed resources for vmselect component

## @typedef {struct} Vmstorage - VMStorage configuration
## @field {*Resources} minAllowed - Minimum allowed resources for vmstorage component
## @field {*Resources} maxAllowed - Maximum allowed resources for vmstorage component

## @typedef {struct} MetricsStorage - Metrics storage configuration
## @field {string} name - Name of the storage instance
## @field {string} retentionPeriod - Retention period for the metrics in the storage instance
## @field {string} deduplicationInterval - Deduplication interval for the metrics in the storage instance
## @field {string} storage - Persistent Volume size for the storage instance
## @field {*string} storageClassName - StorageClass used to store the data
## @field {*Vminsert} vminsert - Configuration for vminsert component of the storage instance
## @field {*Vmselect} vmselect - Configuration for vmselect component of the storage instance
## @field {*Vmstorage} vmstorage - Configuration for vmstorage component of the storage instance

## @param {[]MetricsStorage} metricsStorages - Configuration of metrics storage instances
##
## Example:
## metricsStorages:
## - name: shortterm
##   retentionPeriod: "3d"
##   deduplicationInterval: "15s"
##   storage: 10Gi
##   storageClassName: ""
##   vminsert:
##     minAllowed:
##       cpu: 200m
##       memory: 512Mi
##     maxAllowed:
##       cpu: 1500m
##       memory: 3Gi
##   vmselect:
##     minAllowed:
##       cpu: 300m
##       memory: 1Gi
##     maxAllowed:
##       cpu: 3500m
##       memory: 6Gi
##   vmstorage:
##     minAllowed:
##       cpu: 500m
##       memory: 2Gi
##     maxAllowed:
##       cpu: 4000m
##       memory: 8Gi
##
metricsStorages:
- name: shortterm
  retentionPeriod: "3d"
  deduplicationInterval: "15s"
  storage: 10Gi
  storageClassName: ""
- name: longterm
  retentionPeriod: "14d"
  deduplicationInterval: "5m"
  storage: 10Gi
  storageClassName: ""

## @typedef {struct} LogsStorage - Logs storage configuration
## @field {string} name - Name of the storage instance
## @field {string} retentionPeriod - Retention period for the logs in the storage instance
## @field {string} storage - Persistent Volume size for the storage instance
## @field {*string} storageClassName - StorageClass used to store the data

## @param {[]LogsStorage} logsStorages - Configuration of logs storage instances
logsStorages:
- name: generic
  retentionPeriod: "1"
  storage: 10Gi
  storageClassName: replicated

## @typedef {struct} TelegramAlerts - Telegram alerts configuration
## @field {string} token - Telegram token for your bot
## @field {string} chatID - Specify multiple ID's separated by comma. Get yours in https://t.me/chatid_echo_bot
## @field {string} disabledSeverity - List of severity without alerts, separated by comma like: "informational,warning"

## @typedef {struct} Alerts - Alerts configuration
## @field {TelegramAlerts} telegram - Configuration for Telegram alerts

## @typedef {struct} AlertaResources - Alerta resources configuration
## @field {*Resources} limits - Resources limits for alerta
## @field {*Resources} requests - Resources requests for alerta

## @typedef {struct} Alerta - Alerta configuration
## @field {string} storage - Persistent Volume size for alerta database
## @field {string} storageClassName - StorageClass used to store the data
## @field {*AlertaResources} resources - Resources configuration for alerta
## @field {Alerts} alerts - Configuration for alerts

## @param {Alerta} alerta - Configuration for Alerta
alerta:
  storage: 10Gi
  storageClassName: ""
  resources:
    limits:
      cpu: "1"
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi
  alerts:
    telegram:
      token: ""
      chatID: ""
      disabledSeverity: ""

## @typedef {struct} GrafanaDB - Grafana database configuration
## @field {string} size - Persistent Volume size for grafana database

## @typedef {struct} GrafanaResources - Grafana resources configuration
## @field {*Resources} limits - Resources limits for grafana
## @field {*Resources} requests - Resources requests for grafana

## @typedef {struct} Grafana - Grafana configuration
## @field {GrafanaDB} db - Database configuration
## @field {*GrafanaResources} resources - Resources configuration for grafana

## @param {Grafana} grafana - Configuration for Grafana
grafana:
  db:
    size: 10Gi
  resources:
    limits:
      cpu: "1"
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi
